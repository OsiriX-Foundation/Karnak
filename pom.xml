<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>karnak</artifactId>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <artifactItems>
            <artifactItem>
              <artifactId>libopencv_java</artifactId>
              <classifier>linux-x86-64</classifier>
              <destFileName>libopencv_java.so</destFileName>
              <groupId>org.weasis.thirdparty.org.opencv</groupId>
              <outputDirectory>${project.build.directory}/native-lib/lib/linux-x86-64
              </outputDirectory>
              <type>so</type>
              <version>${weasis.opencv.native.version}</version>
            </artifactItem>
            <artifactItem>
              <artifactId>libopencv_java</artifactId>
              <classifier>macosx-x86-64</classifier>
              <destFileName>libopencv_java.jnilib</destFileName>
              <groupId>org.weasis.thirdparty.org.opencv</groupId>
              <outputDirectory>${project.build.directory}/native-lib/lib/macosx-x86-64
              </outputDirectory>
              <type>jnilib</type>
              <version>${weasis.opencv.native.version}</version>
            </artifactItem>
            <artifactItem>
              <artifactId>opencv_java</artifactId>
              <classifier>windows-x86-64</classifier>
              <destFileName>opencv_java.dll</destFileName>
              <groupId>org.weasis.thirdparty.org.opencv</groupId>
              <outputDirectory>${project.build.directory}/native-lib/lib/windows-x86-64
              </outputDirectory>
              <type>dll</type>
              <version>${weasis.opencv.native.version}</version>
            </artifactItem>
          </artifactItems>
          <outputDirectory>${project.build.directory}</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>copy</goal>
            </goals>
            <id>copy</id>
            <phase>generate-resources</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <jvmArguments>
            -Djava.library.path="${java.io.tmpdir}/dicom-opencv-${weasis.opencv.native.version}"
          </jvmArguments>
          <!-- Clean build and startup time for Vaadin apps sometimes may exceed the default Spring Boot's 30sec timeout.  -->
          <layers>
            <enabled>true</enabled>
          </layers>
          <maxAttempts>240</maxAttempts>
          <wait>500</wait>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <groupId>org.springframework.boot</groupId>
        <version>${springframework.version}</version>
      </plugin>
      <!-- Take care of synchronizing java dependencies and imports in package.json and main.js files. It also creates webpack.config.js
        if not exists yet. -->
      <plugin>
        <artifactId>vaadin-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
        <groupId>com.vaadin</groupId>
        <version>${vaadin.version}</version>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.6.1</version>
        <configuration>
          <!-- define a language-specific format -->
          <java>
            <googleJavaFormat/>
            <toggleOffOn>
              <off>@formatter:off</off>
              <on>@formatter:on</on>
            </toggleOffOn>
            <licenseHeader>
              <!-- @formatter:off -->
              <content>
/*
 * Copyright (c) $YEAR Karnak Team and other contributors.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse
 * Public License 2.0 which is available at http://www.eclipse.org/legal/epl-2.0, or the Apache
 * License, Version 2.0 which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 */
              </content>
              <!-- @formatter:on -->
            </licenseHeader>
          </java>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${project.build.directory}/native-lib</directory>
      </resource>
    </resources>
  </build>
  <dependencies>
    <dependency>
      <artifactId>spring-boot-starter</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>

    <dependency>
      <artifactId>cache-api</artifactId>
      <groupId>javax.cache</groupId>
      <version>1.1.1</version>
    </dependency>

    <dependency>
      <artifactId>hazelcast</artifactId>
      <groupId>com.hazelcast</groupId>
      <version>4.1</version>
    </dependency>

    <dependency>
      <artifactId>liquibase-maven-plugin</artifactId>
      <groupId>org.liquibase</groupId>
      <version>3.4.1</version>
    </dependency>

    <dependency>
      <artifactId>json</artifactId>
      <groupId>org.json</groupId>
      <version>20180813</version>
    </dependency>

    <dependency>
      <artifactId>gson</artifactId>
      <groupId>com.google.code.gson</groupId>
      <version>2.8.6</version>
    </dependency>

    <dependency>
      <artifactId>weasis-dicom-tools</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.weasis</groupId>
      <version>${weasis-dicom-tools.version}</version>
    </dependency>
    <dependency>
      <artifactId>javax.mail</artifactId>
      <groupId>com.sun.mail</groupId>
      <version>${javax.mail.version}</version>
    </dependency>

    <!-- jpa, crud repository -->
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>

    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>

    <!-- Vaadin Spring -->
    <dependency>
      <artifactId>vaadin-spring-boot-starter</artifactId>
      <exclusions>
        <!-- Excluding so that webjars are not included. -->
        <exclusion>
          <artifactId>vaadin-core</artifactId>
          <groupId>com.vaadin</groupId>
        </exclusion>
      </exclusions>
      <groupId>com.vaadin</groupId>
      <version>${vaadin.version}</version>
    </dependency>

    <!-- Spring Security -->
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>

    <dependency>
      <artifactId>spring-boot-devtools</artifactId>
      <groupId>org.springframework.boot</groupId>
      <optional>true</optional>
      <version>${springframework.version}</version>
    </dependency>

    <!-- Bean validation implementation -->
    <dependency>
      <artifactId>hibernate-validator</artifactId>
      <groupId>org.hibernate.validator</groupId>
    </dependency>
    <dependency>
      <artifactId>javax.el</artifactId>
      <groupId>org.glassfish</groupId>
      <version>${javax.el.version}</version>
    </dependency>

    <!-- PostgreSQL -->
    <dependency>
      <artifactId>postgresql</artifactId>
      <groupId>org.postgresql</groupId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <artifactId>vaadin</artifactId>
      <!-- Replace artifactId with vaadin-core to use only free components -->
      <exclusions>
        <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>com.vaadin.webjar</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.insites</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.polymer</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.polymerelements</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.vaadin</groupId>
        </exclusion>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>org.webjars.bowergithub.webcomponents</groupId>
        </exclusion>
      </exclusions>
      <groupId>com.vaadin</groupId>
    </dependency>
    <dependency>
      <artifactId>vaadin-confirm-dialog-flow</artifactId>
      <groupId>com.vaadin</groupId>
    </dependency>
    <!-- Vaadin - Addons -->
    <dependency>
      <artifactId>iron-icons</artifactId>
      <groupId>com.flowingcode.addons</groupId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <artifactId>multiselect-combo-box-flow</artifactId>
      <groupId>org.vaadin.gatanaso</groupId>
      <version>3.0.2</version> <!-- use appropriate version -->
    </dependency>
    <dependency>
      <artifactId>vaadin-checkbox-flow</artifactId>
      <groupId>com.vaadin</groupId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <artifactId>togglebutton</artifactId>
      <groupId>com.vaadin.componentfactory</groupId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <artifactId>validation-api</artifactId>
      <groupId>javax.validation</groupId>
    </dependency>
    <dependency>
      <artifactId>jul-to-slf4j</artifactId>
      <groupId>org.slf4j</groupId>
    </dependency>

    <dependency>
      <artifactId>logback-classic</artifactId>
      <groupId>ch.qos.logback</groupId>
    </dependency>

    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>6.4</version>
    </dependency>

    <!--  Logstash-->
    <dependency>
      <groupId>ch.hcuge.springcloud</groupId>
      <artifactId>spring-cloud-logging</artifactId>
      <version>2.3.6-HSR9-1.0</version>
    </dependency>

    <!-- KeyCloack -->
<!--    <dependency>-->
<!--      <artifactId>keycloak-spring-boot-starter</artifactId>-->
<!--      <groupId>org.keycloak</groupId>-->
<!--      <version>11.0.3</version>-->
<!--    </dependency>-->

    <!--	Jackson -->
    <dependency>
      <artifactId>jackson-annotations</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
    </dependency>
    <dependency>
      <artifactId>jackson-databind</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
    </dependency>
    <dependency>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <groupId>com.fasterxml.jackson.module</groupId>
    </dependency>

    <!-- Tests -->
    <dependency>
      <artifactId>janino</artifactId>
      <groupId>org.codehaus.janino</groupId>
    </dependency>

    <!-- Tests -->
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
      <version>${springframework.version}</version>
    </dependency>

  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>vaadin-bom</artifactId>
        <groupId>com.vaadin</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${vaadin.version}</version>
      </dependency>
<!--      <dependency>-->
<!--        <artifactId>keycloak-adapter-bom</artifactId>-->
<!--        <groupId>org.keycloak.bom</groupId>-->
<!--        <scope>import</scope>-->
<!--        <type>pom</type>-->
<!--        <version>11.0.3</version>-->
<!--      </dependency>-->
    </dependencies>
  </dependencyManagement>
  <modelVersion>4.0.0</modelVersion>

  <name>${project.artifactId}</name>

  <packaging>jar</packaging>

  <parent>
    <artifactId>karnak-parent</artifactId>
    <groupId>org.karnak</groupId>
    <relativePath>parent/pom.xml</relativePath>
    <version>0.9.3-SNAPSHOT</version>
  </parent>

  <profiles>
    <profile>
      <dependencies>
        <dependency>
          <artifactId>h2</artifactId>
          <groupId>com.h2database</groupId>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
      <id>devh2</id>
      <properties>
        <activatedProperties>devh2</activatedProperties>
      </properties>
    </profile>
    <profile>
      <!-- Production mode is activated using -Pproduction -->
      <build>
        <plugins>
          <plugin>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <jvmArguments>-Dvaadin.productionMode</jvmArguments>
              <layers>
                <enabled>true</enabled>
              </layers>
            </configuration>
            <groupId>org.springframework.boot</groupId>
          </plugin>
          <plugin>
            <artifactId>vaadin-maven-plugin</artifactId>
            <configuration>
              <pnpmEnable>true</pnpmEnable>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
            <groupId>com.vaadin</groupId>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <artifactId>flow-server-production-mode</artifactId>
          <groupId>com.vaadin</groupId>
        </dependency>
      </dependencies>

      <id>production</id>

      <properties>
        <vaadin.productionMode>true</vaadin.productionMode>
      </properties>
    </profile>
  </profiles>

  <properties>
<!--    <sonar.host.url>https://sonarcloud.io</sonar.host.url>-->
    <sonar.java.source>${java.version}</sonar.java.source>
    <sonar.java.target>${java.version}</sonar.java.target>
<!--    <sonar.organization>osirix-foundation-1</sonar.organization>-->
    <sonar.projectKey>karnak</sonar.projectKey>
  </properties>

</project>

