/*
 * Copyright (c) 2021 Karnak Team and other contributors.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse
 * Public License 2.0 which is available at https://www.eclipse.org/legal/epl-2.0, or the Apache
 * License, Version 2.0 which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 */
package org.karnak.backend.enums;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Assert;
import org.junit.jupiter.api.Test;

class ExternalIDProviderTypeTest {

  @Test
  void shouldRetrieveDescription() {
    Assert.assertEquals(
        "Pseudonym is generated by mainzelliste",
        ExternalIDProviderType.ID_GENERATED_BY_MAINZELLISTE.getDescription());
    Assert.assertEquals(
        "Pseudonym that has already been entered manually in mainzelliste",
        ExternalIDProviderType.EXTID_IN_MAINTELLISTE.getDescription());
    Assert.assertEquals(
        "Pseudonym is already store in KARNAK",
        ExternalIDProviderType.EXTID_IN_CACHE.getDescription());
    Assert.assertEquals(
        "Pseudonym is in a DICOM tag", ExternalIDProviderType.EXTID_IN_TAG.getDescription());
    Assert.assertEquals("", ExternalIDProviderType.EXTID_PROVIDER_IMPLEMENTATION.getDescription());
  }

  @Test
  void shouldRetrieveIsByDefault() {
    Assert.assertTrue(ExternalIDProviderType.ID_GENERATED_BY_MAINZELLISTE.isByDefault());
    Assert.assertTrue(ExternalIDProviderType.EXTID_IN_MAINTELLISTE.isByDefault());
    Assert.assertTrue(ExternalIDProviderType.EXTID_IN_CACHE.isByDefault());
    Assert.assertTrue(ExternalIDProviderType.EXTID_IN_TAG.isByDefault());
    Assert.assertFalse(ExternalIDProviderType.EXTID_PROVIDER_IMPLEMENTATION.isByDefault());
  }
}
