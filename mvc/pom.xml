<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.karnak</groupId>
		<artifactId>karnak-parent</artifactId>
		<version>0.9.3-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<artifactId>karnak-mvc</artifactId>
	<name>karnak services and UI</name>
	<packaging>jar</packaging>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<version>4.1</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-maven-plugin</artifactId>
			<version>3.4.1</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180813</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.6</version>
		</dependency>


		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>karnak-data</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.weasis</groupId>
			<artifactId>weasis-dicom-tools</artifactId>
			<version>${weasis-dicom-tools.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>${javax.mail.version}</version>
		</dependency>

		<!-- jpa, crud repository -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

    <!-- Vaadin Spring -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring-boot-starter</artifactId>
      <version>${vaadin.version}</version>
      <exclusions>
        <!-- Excluding so that webjars are not included. -->
        <exclusion>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <version>${springframework.version}</version>
      <optional>true</optional>
    </dependency>

		<!-- Bean validation implementation -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>${javax.el.version}</version>
		</dependency>

		<!-- PostgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<!-- Replace artifactId with vaadin-core to use only free components -->
			<artifactId>vaadin</artifactId>
			<exclusions>
				<!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
				<exclusion>
					<groupId>com.vaadin.webjar</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.insites</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymer</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymerelements</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.vaadin</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.webcomponents</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-confirm-dialog-flow</artifactId>
		</dependency>
    <!-- Vaadin - Addons -->
    <dependency>
      <groupId>com.flowingcode.addons</groupId>
      <artifactId>iron-icons</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.vaadin.gatanaso</groupId>
      <artifactId>multiselect-combo-box-flow</artifactId>
      <version>3.0.2</version> <!-- use appropriate version -->
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-checkbox-flow</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin.componentfactory</groupId>
      <artifactId>togglebutton</artifactId>
      <version>1.0.0</version>
    </dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${springframework.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${project.build.directory}/native-lib</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<artifactItems>
						<artifactItem>
							<groupId>org.weasis.thirdparty.org.opencv</groupId>
							<artifactId>libopencv_java</artifactId>
							<version>${weasis.opencv.native.version}</version>
							<type>so</type>
							<classifier>linux-x86-64</classifier>
							<outputDirectory>${project.build.directory}/native-lib/lib/linux-x86-64</outputDirectory>
							<destFileName>libopencv_java.so</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.weasis.thirdparty.org.opencv</groupId>
							<artifactId>libopencv_java</artifactId>
							<version>${weasis.opencv.native.version}</version>
							<type>jnilib</type>
							<classifier>macosx-x86-64</classifier>
							<outputDirectory>${project.build.directory}/native-lib/lib/macosx-x86-64</outputDirectory>
							<destFileName>libopencv_java.jnilib</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.weasis.thirdparty.org.opencv</groupId>
							<artifactId>opencv_java</artifactId>
							<version>${weasis.opencv.native.version}</version>
							<type>dll</type>
							<classifier>windows-x86-64</classifier>
							<outputDirectory>${project.build.directory}/native-lib/lib/windows-x86-64</outputDirectory>
							<destFileName>opencv_java.dll</destFileName>
						</artifactItem>
					</artifactItems>
					<outputDirectory>${project.build.directory}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${springframework.version}</version>
				<configuration>
					<jvmArguments>-Djava.library.path="${java.io.tmpdir}/dicom-opencv-${weasis.opencv.native.version}"</jvmArguments>
          <!-- Clean build and startup time for Vaadin apps sometimes may exceed the default Spring Boot's 30sec timeout.  -->
          <wait>500</wait>
          <maxAttempts>240</maxAttempts>
          <layers>
            <enabled>true</enabled>
          </layers>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Take care of synchronizing java dependencies and imports in package.json and main.js files. It also creates webpack.config.js
				if not exists yet. -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>devh2</id>
			<properties>
				<activatedProperties>devh2</activatedProperties>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<!-- Production mode is activated using -Pproduction -->
			<id>production</id>
			<properties>
				<vaadin.productionMode>true</vaadin.productionMode>
			</properties>

			<dependencies>
				<dependency>
					<groupId>com.vaadin</groupId>
					<artifactId>flow-server-production-mode</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>-Dvaadin.productionMode</jvmArguments>
              <layers>
                <enabled>true</enabled>
              </layers>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>build-frontend</goal>
								</goals>
								<phase>compile</phase>
							</execution>
						</executions>
						<configuration>
							<pnpmEnable>true</pnpmEnable>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>